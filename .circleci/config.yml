version: 2
jobs:
  build:
    parallelism: 1
    docker:
      - image: circleci/ruby:2.4.1-jessie-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: postgres
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: koroibos_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - run:
          name: Which Bundler?
          command: bundle -v
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2
      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: wait for db
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: db setup
          command: bin/rails db:schema:load --trace
      - run:
          name: run rspec
          command: |
            bundle exec rspec --profile 10 \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: test_results

  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
         name: deploying to heroku
         command: |
           git push https://heroku:$HEROKU_API_KEY@git.heroku.com/stormy-lake-75994.git master

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
